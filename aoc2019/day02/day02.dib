#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"name":"csharp","languageName":"C#","aliases":["c#","cs"]},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"html","languageName":"HTML"},{"name":"http","languageName":"HTTP"},{"name":"javascript","languageName":"javascript","aliases":["js"]},{"name":"mermaid","languageName":"Mermaid"},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"value"}]}}

#!csharp

int[] sampleInput = [1,9,10,3,2,3,11,0,99,30,40,50];
int[] puzzleInput = [1,0,0,3,1,1,2,3,1,3,4,3,1,5,0,3,2,1,10,19,2,9,19,23,2,23,10,27,1,6,27,31,1,31,6,35,2,35,10,39,1,39,5,43,2,6,43,47,2,47,10,51,1,51,6,55,1,55,6,59,1,9,59,63,1,63,9,67,1,67,6,71,2,71,13,75,1,75,5,79,1,79,9,83,2,6,83,87,1,87,5,91,2,6,91,95,1,95,9,99,2,6,99,103,1,5,103,107,1,6,107,111,1,111,10,115,2,115,13,119,1,119,6,123,1,123,2,127,1,127,5,0,99,2,14,0,0];

var input = sampleInput;

#!csharp

Console.WriteLine("Input: " + String.Join(", ", input));

#!csharp

step(intput, index) {
}

#!javascript

#!set --value @javascript:input --name input

function step(values, i) {
  const opcode = values[i];
  const a = values[i + 1];
  const b = values[i + 2];
  const c = values[i + 3];

  console.log(`Opcode: ${opcode}, a: ${a}, b: ${b}, c: ${c}`);

  switch (opcode) {
    case 1:
      values[c] = a + b;
      break;
    case 2:
      values[c] = a * b;
      break;
    case 99:
      return -1;
    default:
      console.log(`Unknown opcode: ${opcode}`);
      return -2;
  }
  return i + 4;
};

const index = 0;
console.log(index);
console.log(input);

while (index >= 0) {
  console.log(index);
  index = step(input, index);
  console.log("!!" + index);
}

#!javascript

#!set --value @javascript:input --name input
console.log(input);
